@{
    ViewBag.Title = "Chat";
}
<h2>Chat</h2>
<div style="clear: both;">
    <div class="container" style="float: left">
        <div id="Username"></div>
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <ul id="discussion"></ul>
    </div>
    <div id="usersCol" style="float: right;">
        <ul id="users"></ul>
    </div>
    <div style="clear: both;"></div>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            $('#Username').append("You are chatting as " + $('#displayname').val() + ":");
            // Start the connection.
            $.connection.hub.start().done(function () {
                if ($('#displayname').val != null) {
                    chat.server.getOnlineUsers();
                }
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
    @*<script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            
            // Set initial focus to message input box.
            $('#message').focus();
            $('#Username').append("You are chatting as " + $('#displayname').val() + ":");
            //chat.server.addonlineuser($('#displayname').val());
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    //var v = chat.server.getonlineusers();
                    //for (i = 0; i < v.length; i++){
                    //    $('#users').append('<li><strong>' + v[i] + '</strong></li>');
                    //}
                    $('#users').append('<li><strong>' + $('#displayname').val() + '</strong></li>');
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });            
        });

        //$(function () {
        //    var chat = $.connection.chatHub;
        //    chat.client.GetAllUsersOnline = function () {
        //        var v = chat.server.GetOnlineUsers("");
        //        alert("I'm here!");
        //    }
        //})
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            //var encodedValue = $('<div />').text(value).html();
            chat.server.send($('#displayname').val(), $('#message').val());
            return encodedValue;
        }
    </script>*@
}